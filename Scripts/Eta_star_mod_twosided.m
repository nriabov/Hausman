function [ eta_lhs ] = Eta_star_mod_twosided( eta_1, eta_2, eta_3, beta, lambda, h_2)
%Eta_star_mod: This function takes in eta_1, eta_2 and eta_3 generated by
%Eta_gen or Eta_gen_comb, a quantile index beta, and values lambda and h_2
% as given in instructions from July 3rd 2014, and outputs the modified
% eta_star from said instructions.

% Error if beta is not between 0 and 1
if beta < 0 || beta > 1
    error('The quantile beta must be between 0 and 1');
end

% Compute the 1 - beta quantile of a chi square distribution with 1 degree
% of freedom
quant_xisq = chi2inv(1 - beta, 1);

% Compute the indicator functions
eta3_leq = (eta_3 <= quant_xisq);
eta3_more = ~eta3_leq;

% Compute the factors to be added
fac_1 = lambda .* (1 + h_2^2)^(1/2);
fac_2 = lambda .* h_2;

%size(fac_1)
%size(eta_2)
%size(eta3_leq)

% Compute eta_lhs
eta_lhs = bsxfun(@times, abs(bsxfun(@plus, fac_1', eta_2)),  eta3_leq) ...
    + bsxfun(@times, abs(bsxfun(@plus, fac_2', eta_1)), eta3_more);
%eta_lhs = bsxfun(@plus, fac_1', eta_2) .* eta3_leq' + bsxfun(@plus, fac_2', eta_1) .* eta3_more';
%eta_lhs = (fac_1 + eta_2) .* eta3_leq + (fac_2 + eta_1) .* eta3_more;

end

